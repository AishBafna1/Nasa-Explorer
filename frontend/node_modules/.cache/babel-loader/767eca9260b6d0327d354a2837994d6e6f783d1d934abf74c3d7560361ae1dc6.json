{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Import Navbar\nimport MyChart from '../components/MyChart'; // Import your chart component\nimport './APOD.css'; // Import APOD styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction APOD() {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(''); // State for selected date\n\n  // Function to fetch APOD data\n  const fetchAPOD = async date => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/apod?date=${date}`);\n      const data = await response.json();\n      setApodData(data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Effect to fetch APOD when the component mounts or when selectedDate changes\n  useEffect(() => {\n    if (selectedDate) {\n      fetchAPOD(selectedDate);\n    } else {\n      fetchAPOD(new Date().toISOString().split('T')[0]); // Default to today's date\n    }\n  }, [selectedDate]);\n\n  // Prepare chart data based on APOD data (you can adjust this to fit your needs)\n  const chartData = {\n    labels: ['Example 1', 'Example 2', 'Example 3'],\n    // Replace with actual labels\n    datasets: [{\n      label: 'Example Dataset',\n      data: [12, 19, 3],\n      // Replace with actual data\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apod-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apod-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: (apodData === null || apodData === void 0 ? void 0 : apodData.title) || 'Astronomy Picture of the Day'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value) // Update selected date\n        ,\n        style: {\n          margin: '20px 0',\n          padding: '10px',\n          fontSize: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-wrapper\",\n        children: apodData && apodData.media_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: apodData.url,\n          alt: apodData.title,\n          className: \"apod-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this) : apodData && /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"APOD Video\",\n          src: apodData.url,\n          className: \"apod-video\",\n          frameBorder: \"0\",\n          allow: \"autoplay; encrypted-media\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: apodData === null || apodData === void 0 ? void 0 : apodData.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"date\",\n        children: [\"Date: \", apodData === null || apodData === void 0 ? void 0 : apodData.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \" \", apodData && apodData.media_type === 'image' && /*#__PURE__*/_jsxDEV(MyChart, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) // Pass your chart data here\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(APOD, \"2tBvReFsHmA1YAKIcTllZxJmQBs=\");\n_c = APOD;\nexport default APOD;\nvar _c;\n$RefreshReg$(_c, \"APOD\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","MyChart","jsxDEV","_jsxDEV","APOD","_s","apodData","setApodData","loading","setLoading","error","setError","selectedDate","setSelectedDate","fetchAPOD","date","response","fetch","data","json","Date","toISOString","split","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","title","type","value","onChange","e","target","style","margin","padding","fontSize","media_type","src","url","alt","frameBorder","allow","allowFullScreen","explanation","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Import Navbar\nimport MyChart from '../components/MyChart'; // Import your chart component\nimport './APOD.css'; // Import APOD styles\n\nfunction APOD() {\n  const [apodData, setApodData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(''); // State for selected date\n\n  // Function to fetch APOD data\n  const fetchAPOD = async (date) => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/apod?date=${date}`);\n      const data = await response.json();\n      setApodData(data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Effect to fetch APOD when the component mounts or when selectedDate changes\n  useEffect(() => {\n    if (selectedDate) {\n      fetchAPOD(selectedDate);\n    } else {\n      fetchAPOD(new Date().toISOString().split('T')[0]); // Default to today's date\n    }\n  }, [selectedDate]);\n\n  // Prepare chart data based on APOD data (you can adjust this to fit your needs)\n  const chartData = {\n    labels: ['Example 1', 'Example 2', 'Example 3'], // Replace with actual labels\n    datasets: [\n      {\n        label: 'Example Dataset',\n        data: [12, 19, 3], // Replace with actual data\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"apod-container\">\n      <Navbar /> {/* Include the Navbar */}\n      \n      {loading && <div className=\"spinner\">Loading...</div>}\n      {error && <p className=\"error\">Error fetching data: {error.message}</p>}\n      \n      <div className=\"apod-content\">\n        <h1>{apodData?.title || 'Astronomy Picture of the Day'}</h1>\n        \n        {/* Date selection */}\n        <input\n          type=\"date\"\n          value={selectedDate}\n          onChange={(e) => setSelectedDate(e.target.value)} // Update selected date\n          style={{ margin: '20px 0', padding: '10px', fontSize: '1rem' }}\n        />\n\n        {/* Media display */}\n        <div className=\"media-wrapper\">\n          {apodData && apodData.media_type === 'image' ? (\n            <img src={apodData.url} alt={apodData.title} className=\"apod-image\" />\n          ) : (\n            apodData && (\n              <iframe\n                title=\"APOD Video\"\n                src={apodData.url}\n                className=\"apod-video\"\n                frameBorder=\"0\"\n                allow=\"autoplay; encrypted-media\"\n                allowFullScreen\n              />\n            )\n          )}\n        </div>\n\n        <p className=\"description\">{apodData?.explanation}</p>\n        <p className=\"date\">Date: {apodData?.date}</p> {/* Display the date */}\n\n        {/* Render chart if APOD data is available */}\n        {apodData && apodData.media_type === 'image' && (\n          <MyChart data={chartData} /> // Pass your chart data here\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default APOD;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}