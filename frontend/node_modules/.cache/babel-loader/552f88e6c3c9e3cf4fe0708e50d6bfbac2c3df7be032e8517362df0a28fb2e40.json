{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [marsPhotos, setMarsPhotos] = useState([]);\n  const [epicImages, setEpicImages] = useState([]);\n  const [neoData, setNeoData] = useState([]);\n  const [nasaLibrary, setNasaLibrary] = useState([]);\n  const [loading, setLoading] = useState(true); // State to handle loading status\n  const [error, setError] = useState(null); // State to handle errors\n  const [sol, setSol] = useState(1000); // Default Martian day\n\n  // Fetch APOD data\n  useEffect(() => {\n    fetch('/api/apod').then(response => response.json()).then(data => {\n      setApodData(data);\n      setLoading(false); // Data has been successfully loaded\n    }).catch(error => {\n      setError(error); // Set error in state if the request fails\n      setLoading(false); // Loading is complete, even if there was an error\n    });\n  }, []);\n\n  // Fetch Mars Rover photos\n  const fetchMarsPhotos = () => {\n    setLoading(true);\n    fetch(`/api/mars-photos?sol=${sol}`).then(response => response.json()).then(data => {\n      setMarsPhotos(data.photos);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  };\n\n  // Fetch EPIC images, NeoWs data, and NASA library images...\n  // (Include similar fetch functions for other features)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NASA Data Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), apodData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apod-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apodData.url,\n        alt: \"APOD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mars-photos\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mars Rover Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sol,\n        onChange: e => setSol(e.target.value),\n        placeholder: \"Enter Martian Sol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMarsPhotos,\n        children: \"Fetch Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), marsPhotos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: photo.img_src,\n          alt: `Mars ${photo.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, photo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RmTtdlI2y7MNjicKGeHko2tBZyM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","apodData","setApodData","marsPhotos","setMarsPhotos","epicImages","setEpicImages","neoData","setNeoData","nasaLibrary","setNasaLibrary","loading","setLoading","error","setError","sol","setSol","fetch","then","response","json","data","catch","fetchMarsPhotos","photos","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","title","src","url","alt","explanation","type","value","onChange","e","target","placeholder","onClick","map","photo","img_src","id","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [apodData, setApodData] = useState(null);\n  const [marsPhotos, setMarsPhotos] = useState([]);\n  const [epicImages, setEpicImages] = useState([]);\n  const [neoData, setNeoData] = useState([]);\n  const [nasaLibrary, setNasaLibrary] = useState([]);\n  \n  const [loading, setLoading] = useState(true);  // State to handle loading status\n  const [error, setError] = useState(null);      // State to handle errors\n  const [sol, setSol] = useState(1000);          // Default Martian day\n  \n  // Fetch APOD data\n  useEffect(() => {\n    fetch('/api/apod')\n      .then((response) => response.json())\n      .then((data) => {\n        setApodData(data);\n        setLoading(false); // Data has been successfully loaded\n      })\n      .catch((error) => {\n        setError(error);   // Set error in state if the request fails\n        setLoading(false); // Loading is complete, even if there was an error\n      });\n  }, []);\n\n  // Fetch Mars Rover photos\n  const fetchMarsPhotos = () => {\n    setLoading(true);\n    fetch(`/api/mars-photos?sol=${sol}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setMarsPhotos(data.photos);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError(error);\n        setLoading(false);\n      });\n  };\n\n  // Fetch EPIC images, NeoWs data, and NASA library images...\n  // (Include similar fetch functions for other features)\n\n  return (\n    <div className=\"App\">\n      <h1>NASA Data Explorer</h1>\n\n      {/* Display loading indicator */}\n      {loading && <div className=\"spinner\">Loading...</div>}\n\n      {/* Display error message if there is an error */}\n      {error && <p className=\"error\">Error fetching data: {error.message}</p>}\n\n      {/* APOD Section */}\n      {apodData && (\n        <div className=\"apod-container\">\n          <h2>{apodData.title}</h2>\n          <img src={apodData.url} alt=\"APOD\" />\n          <p>{apodData.explanation}</p>\n        </div>\n      )}\n\n      {/* Mars Rover Photos Section */}\n      <div className=\"mars-photos\">\n        <h2>Mars Rover Photos</h2>\n        <input \n          type=\"number\" \n          value={sol} \n          onChange={(e) => setSol(e.target.value)} \n          placeholder=\"Enter Martian Sol\" \n        />\n        <button onClick={fetchMarsPhotos}>Fetch Photos</button>\n        {marsPhotos.map((photo) => (\n          <div key={photo.id}>\n            <img src={photo.img_src} alt={`Mars ${photo.id}`} />\n          </div>\n        ))}\n      </div>\n\n      {/* Other sections for EPIC, NeoWs, and NASA library */}\n      {/* ... */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}