{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NeoWs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the path is correct\nimport './NeoWs.css'; // Ensure you have your NEO styles\nimport NEOChart from '../components/NEOChart'; // Import the chart component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NeoWs() {\n  _s();\n  const [neoData, setNeoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch Near Earth Objects data from the API\n  const fetchNeoData = async () => {\n    setLoading(true); // Set loading state before fetching\n    try {\n      const response = await fetch('/api/neo'); // Fetch data from your backend\n      const data = await response.json(); // Parse the response as JSON\n      console.log('NEO Data:', data); // Log the fetched data\n\n      // Check if the data contains near_earth_objects\n      if (data && data.near_earth_objects) {\n        setNeoData(data.near_earth_objects); // Set the state to the array of NEOs\n      } else {\n        console.error('Unexpected data structure:', data);\n        setNeoData([]); // Set to empty if unexpected structure\n      }\n    } catch (error) {\n      console.error('Error fetching NEO data:', error); // Log any errors\n      setError(error); // Set the error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Call the fetch function when the component mounts\n  useEffect(() => {\n    fetchNeoData(); // Call the function to fetch NEO data\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"neo-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Near Earth Objects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), neoData.length > 0 && /*#__PURE__*/_jsxDEV(NEOChart, {\n      neoData: neoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"neo-list\",\n      children: neoData.map(neo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"neo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: neo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Estimated Diameter:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 16\n          }, this), \" \", neo.estimated_diameter.meters.estimated_diameter_max.toFixed(2), \" m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Close Approach Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }, this), \" \", neo.close_approach_data[0].close_approach_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Miss Distance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }, this), \" \", neo.close_approach_data[0].miss_distance.kilometers, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, neo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(NeoWs, \"mIDJ2D4KaONsoVT8ys47w9oMmts=\");\n_c = NeoWs;\nexport default NeoWs;\nvar _c;\n$RefreshReg$(_c, \"NeoWs\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","NEOChart","jsxDEV","_jsxDEV","NeoWs","_s","neoData","setNeoData","loading","setLoading","error","setError","fetchNeoData","response","fetch","data","json","console","log","near_earth_objects","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","map","neo","name","estimated_diameter","meters","estimated_diameter_max","toFixed","close_approach_data","close_approach_date","miss_distance","kilometers","id","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NeoWs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the path is correct\nimport './NeoWs.css'; // Ensure you have your NEO styles\nimport NEOChart from '../components/NEOChart'; // Import the chart component\n\nfunction NeoWs() {\n  const [neoData, setNeoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch Near Earth Objects data from the API\n  const fetchNeoData = async () => {\n    setLoading(true); // Set loading state before fetching\n    try {\n      const response = await fetch('/api/neo'); // Fetch data from your backend\n      const data = await response.json(); // Parse the response as JSON\n      console.log('NEO Data:', data); // Log the fetched data\n\n      // Check if the data contains near_earth_objects\n      if (data && data.near_earth_objects) {\n        setNeoData(data.near_earth_objects); // Set the state to the array of NEOs\n      } else {\n        console.error('Unexpected data structure:', data);\n        setNeoData([]); // Set to empty if unexpected structure\n      }\n    } catch (error) {\n      console.error('Error fetching NEO data:', error); // Log any errors\n      setError(error); // Set the error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Call the fetch function when the component mounts\n  useEffect(() => {\n    fetchNeoData(); // Call the function to fetch NEO data\n  }, []);\n\n  return (\n    <div className=\"neo-container\">\n      <Navbar /> {/* Include the Navbar */}\n\n      {loading && <div className=\"spinner\">Loading...</div>}\n      {error && <p className=\"error\">Error fetching data: {error.message}</p>}\n\n      <h1>Near Earth Objects</h1>\n\n      {/* Render the chart */}\n      {neoData.length > 0 && <NEOChart neoData={neoData} />}\n\n      {/* Display the list of NEOs */}\n      <div className=\"neo-list\">\n        {neoData.map((neo) => (\n          <div key={neo.id} className=\"neo-item\">\n            <h2>{neo.name}</h2>\n            <p><strong>Estimated Diameter:</strong> {neo.estimated_diameter.meters.estimated_diameter_max.toFixed(2)} m</p>\n            <p><strong>Close Approach Date:</strong> {neo.close_approach_data[0].close_approach_date}</p>\n            <p><strong>Miss Distance:</strong> {neo.close_approach_data[0].miss_distance.kilometers} km</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default NeoWs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}