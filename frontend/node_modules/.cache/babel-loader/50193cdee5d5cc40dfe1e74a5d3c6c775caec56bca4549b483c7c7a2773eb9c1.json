{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [epicImages, setEpicImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch EPIC images\n  const fetchEpicImages = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/epic'); // This should hit your backend\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('EPIC Images Data:', data); // Log data to console\n      setEpicImages(data);\n    } catch (error) {\n      console.error('Error fetching EPIC images:', error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Call the fetch function when the component mounts\n  useEffect(() => {\n    fetchEpicImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NASA Data Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"epic-images\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Earth Polychromatic Imaging Camera (EPIC) Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), epicImages.length > 0 ? epicImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://epic.gsfc.nasa.gov/archive/natural/${image.date.slice(0, 10)}/jpg/${image.image}.jpg`,\n          alt: image.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: image.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)]\n      }, image.identifier, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No EPIC images available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"mYvgWJ04eFnUsIUk+XHbeN4SEPs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","epicImages","setEpicImages","loading","setLoading","error","setError","fetchEpicImages","response","fetch","ok","Error","status","data","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","map","image","src","date","slice","alt","caption","identifier","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [epicImages, setEpicImages] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Fetch EPIC images\n    const fetchEpicImages = async () => {\n        setLoading(true);\n        try {\n            const response = await fetch('/api/epic'); // This should hit your backend\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            console.log('EPIC Images Data:', data); // Log data to console\n            setEpicImages(data); \n        } catch (error) {\n            console.error('Error fetching EPIC images:', error);\n            setError(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Call the fetch function when the component mounts\n    useEffect(() => {\n        fetchEpicImages();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <h1>NASA Data Explorer</h1>\n            \n            {/* Display loading indicator */}\n            {loading && <div className=\"spinner\">Loading...</div>}\n            \n            {/* Display error message if there is an error */}\n            {error && <p className=\"error\">Error fetching data: {error.message}</p>}\n\n            {/* EPIC Images Section */}\n            <div className=\"epic-images\">\n                <h2>Earth Polychromatic Imaging Camera (EPIC) Images</h2>\n                {epicImages.length > 0 ? (\n                    epicImages.map((image) => (\n                        <div key={image.identifier}>\n                            <img \n                                src={`https://epic.gsfc.nasa.gov/archive/natural/${image.date.slice(0, 10)}/jpg/${image.image}.jpg`} \n                                alt={image.caption} \n                            />\n                            <p>{image.caption}</p>\n                        </div>\n                    ))\n                ) : (\n                    <p>No EPIC images available.</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}