{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NeoWs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the path is correct\nimport './NeoWs.css'; // Ensure you have your NEO styles\nimport MyChart from '../components/MyChart'; // Import your chart component for visualization\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NeoWs() {\n  _s();\n  const [neoData, setNeoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch Near Earth Objects data from the API\n  const fetchNeoData = async () => {\n    setLoading(true); // Set loading state before fetching\n    try {\n      const response = await fetch('/api/neo'); // Fetch data from your backend\n      const data = await response.json(); // Parse the response as JSON\n      console.log('NEO Data:', data); // Log the fetched data\n\n      if (Array.isArray(data)) {\n        setNeoData(data); // Set the state to the array of NEOs\n      } else {\n        console.error('Unexpected data structure:', data);\n        setNeoData([]); // Set to empty if unexpected structure\n      }\n    } catch (error) {\n      console.error('Error fetching NEO data:', error); // Log any errors\n      setError(error); // Set the error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Call the fetch function when the component mounts\n  useEffect(() => {\n    fetchNeoData(); // Call the function to fetch NEO data\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"neo-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Near Earth Objects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"neo-list\",\n      children: neoData.map(neo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"neo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: neo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Estimated Diameter:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 16\n          }, this), \" \", neo.diameter.toFixed(2), \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Close Approach Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }, this), \" \", neo.closeApproachDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Miss Distance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 16\n          }, this), \" \", neo.missDistance, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, neo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyChart, {\n      data: neoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(NeoWs, \"mIDJ2D4KaONsoVT8ys47w9oMmts=\");\n_c = NeoWs;\nexport default NeoWs;\nvar _c;\n$RefreshReg$(_c, \"NeoWs\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","MyChart","jsxDEV","_jsxDEV","NeoWs","_s","neoData","setNeoData","loading","setLoading","error","setError","fetchNeoData","response","fetch","data","json","console","log","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","neo","name","diameter","toFixed","closeApproachDate","missDistance","id","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NeoWs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the path is correct\nimport './NeoWs.css'; // Ensure you have your NEO styles\nimport MyChart from '../components/MyChart';  // Import your chart component for visualization\n\nfunction NeoWs() {\n  const [neoData, setNeoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch Near Earth Objects data from the API\n  const fetchNeoData = async () => {\n    setLoading(true); // Set loading state before fetching\n    try {\n      const response = await fetch('/api/neo'); // Fetch data from your backend\n      const data = await response.json(); // Parse the response as JSON\n      console.log('NEO Data:', data); // Log the fetched data\n\n      if (Array.isArray(data)) {\n        setNeoData(data); // Set the state to the array of NEOs\n      } else {\n        console.error('Unexpected data structure:', data);\n        setNeoData([]); // Set to empty if unexpected structure\n      }\n    } catch (error) {\n      console.error('Error fetching NEO data:', error); // Log any errors\n      setError(error); // Set the error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Call the fetch function when the component mounts\n  useEffect(() => {\n    fetchNeoData(); // Call the function to fetch NEO data\n  }, []);\n\n  return (\n    <div className=\"neo-container\">\n      <Navbar /> {/* Include the Navbar */}\n\n      {loading && <div className=\"spinner\">Loading...</div>}\n      {error && <p className=\"error\">Error fetching data: {error.message}</p>}\n\n      <h1>Near Earth Objects</h1>\n      <div className=\"neo-list\">\n        {neoData.map((neo) => (\n          <div key={neo.id} className=\"neo-item\">\n            <h2>{neo.name}</h2>\n            <p><strong>Estimated Diameter:</strong> {neo.diameter.toFixed(2)} km</p>\n            <p><strong>Close Approach Date:</strong> {neo.closeApproachDate}</p>\n            <p><strong>Miss Distance:</strong> {neo.missDistance} km</p>\n          </div>\n        ))}\n      </div>\n\n      {/* Visualization Component for NEOs */}\n      <MyChart data={neoData} />\n    </div>\n  );\n}\n\nexport default NeoWs;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}