{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction APOD() {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]); // Default to today's date\n\n  // Fetch APOD data based on selected date\n  const fetchAPOD = async selectedDate => {\n    setLoading(true); // Set loading state\n    try {\n      const response = await fetch(`/api/apod?date=${selectedDate}`); // Fetch data from your backend\n      const data = await response.json(); // Parse the response as JSON\n      setApodData(data); // Store the fetched data\n    } catch (error) {\n      console.error('Error fetching APOD data:', error);\n      setError(error); // Set error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Call fetchAPOD when the component mounts or the date changes\n  useEffect(() => {\n    fetchAPOD(date); // Fetch APOD for the selected date\n  }, [date]); // Fetch whenever date changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Astronomy Picture of the Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value) // Update the date when the user selects a new one\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), apodData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), apodData.media_type === 'video' ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"APOD Video\",\n        src: apodData.url,\n        width: \"600\",\n        height: \"400\",\n        frameBorder: \"0\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apodData.url,\n        alt: apodData.title,\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }, this), \" \", apodData.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(APOD, \"88oWgPwRT2eWxP5OE+SFiMFlwDI=\");\n_c = APOD;\nexport default APOD;\nvar _c;\n$RefreshReg$(_c, \"APOD\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","APOD","_s","apodData","setApodData","loading","setLoading","error","setError","date","setDate","Date","toISOString","split","fetchAPOD","selectedDate","response","fetch","data","json","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","message","title","media_type","src","url","width","height","frameBorder","allowFullScreen","alt","style","maxWidth","explanation","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction APOD() {\n  const [apodData, setApodData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]); // Default to today's date\n\n  // Fetch APOD data based on selected date\n  const fetchAPOD = async (selectedDate) => {\n    setLoading(true); // Set loading state\n    try {\n      const response = await fetch(`/api/apod?date=${selectedDate}`); // Fetch data from your backend\n      const data = await response.json(); // Parse the response as JSON\n      setApodData(data); // Store the fetched data\n    } catch (error) {\n      console.error('Error fetching APOD data:', error);\n      setError(error); // Set error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Call fetchAPOD when the component mounts or the date changes\n  useEffect(() => {\n    fetchAPOD(date); // Fetch APOD for the selected date\n  }, [date]); // Fetch whenever date changes\n\n  return (\n    <div>\n      <h2>Astronomy Picture of the Day</h2>\n      <input\n        type=\"date\"\n        value={date}\n        onChange={(e) => setDate(e.target.value)} // Update the date when the user selects a new one\n      />\n      {loading && <div>Loading...</div>}\n      {error && <p>Error fetching data: {error.message}</p>}\n      {apodData && (\n        <div>\n          <h3>{apodData.title}</h3>\n          {apodData.media_type === 'video' ? (\n            <iframe\n              title=\"APOD Video\"\n              src={apodData.url}\n              width=\"600\"\n              height=\"400\"\n              frameBorder=\"0\"\n              allowFullScreen\n            ></iframe>\n          ) : (\n            <img src={apodData.url} alt={apodData.title} style={{ maxWidth: '100%' }} />\n          )}\n          <p>{apodData.explanation}</p>\n          <p><strong>Date:</strong> {apodData.date}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default APOD;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}