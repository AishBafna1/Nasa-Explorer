{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NasaLibrary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the path is correct\nimport './NasaLibrary.css'; // Ensure you have your CSS ready\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NasaLibrary() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [libraryData, setLibraryData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch NASA library images\n  const fetchLibraryImages = async () => {\n    if (!searchQuery) {\n      setError('Please enter a search term.');\n      return;\n    }\n    setLoading(true);\n    setError(null); // Reset any previous errors\n\n    try {\n      const response = await fetch(`/api/nasa-library?q=${searchQuery}`);\n      const data = await response.json();\n      console.log('NASA Library Data:', data);\n      if (data.collection && data.collection.items.length > 0) {\n        setLibraryData(data.collection.items);\n      } else {\n        setLibraryData([]); // Clear previous results if no new results\n        setError('No results found.'); // Set error if no results\n      }\n    } catch (error) {\n      console.error('Error fetching NASA library data:', error);\n      setError('Failed to fetch NASA library data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nasa-library-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for images...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value) // Update search query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchLibraryImages,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NASA Image and Video Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-grid\",\n      children: libraryData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"library-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.links[0].href // Get the image URL\n          ,\n          alt: item.data[0].title,\n          className: \"library-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.data[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.data[0].description || 'No description available.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, item.data[0].nasa_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(NasaLibrary, \"1qR66Zftk9psoPrdppiL4B/JmBs=\");\n_c = NasaLibrary;\nexport default NasaLibrary;\nvar _c;\n$RefreshReg$(_c, \"NasaLibrary\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","NasaLibrary","_s","searchQuery","setSearchQuery","libraryData","setLibraryData","loading","setLoading","error","setError","fetchLibraryImages","response","fetch","data","json","console","log","collection","items","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","item","src","links","href","alt","title","description","nasa_id","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NasaLibrary.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the path is correct\nimport './NasaLibrary.css'; // Ensure you have your CSS ready\n\nfunction NasaLibrary() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [libraryData, setLibraryData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch NASA library images\n  const fetchLibraryImages = async () => {\n    if (!searchQuery) {\n      setError('Please enter a search term.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null); // Reset any previous errors\n\n    try {\n      const response = await fetch(`/api/nasa-library?q=${searchQuery}`);\n      const data = await response.json();\n      console.log('NASA Library Data:', data);\n\n      if (data.collection && data.collection.items.length > 0) {\n        setLibraryData(data.collection.items);\n      } else {\n        setLibraryData([]); // Clear previous results if no new results\n        setError('No results found.'); // Set error if no results\n      }\n    } catch (error) {\n      console.error('Error fetching NASA library data:', error);\n      setError('Failed to fetch NASA library data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"nasa-library-container\">\n      <Navbar /> {/* Include the Navbar */}\n\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for images...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)} // Update search query\n        />\n        <button onClick={fetchLibraryImages}>Search</button>\n      </div>\n\n      {loading && <div className=\"spinner\">Loading...</div>}\n      {error && <p className=\"error\">{error}</p>} {/* Display error message */}\n\n      <h1>NASA Image and Video Library</h1>\n      <div className=\"library-grid\">\n        {libraryData.map((item) => (\n          <div key={item.data[0].nasa_id} className=\"library-item\">\n            <img \n              src={item.links[0].href} // Get the image URL\n              alt={item.data[0].title} \n              className=\"library-image\" \n            />\n            <p>{item.data[0].title}</p>\n            <p>{item.data[0].description || 'No description available.'}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default NasaLibrary;\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}