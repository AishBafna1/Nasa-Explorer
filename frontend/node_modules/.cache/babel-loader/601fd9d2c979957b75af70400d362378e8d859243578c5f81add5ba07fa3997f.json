{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js\",\n  _s = $RefreshSig$();\n// src/pages/APOD.js\n\nimport React, { useEffect, useState } from 'react';\nimport './APOD.css'; // Import the updated CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction APOD() {\n  _s();\n  const [apodData, setApodData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAPOD = async () => {\n      try {\n        const response = await fetch('/api/apod');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setApodData(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAPOD();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apod-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apod-content\",\n      children: [apodData.media_type === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apodData.url,\n        alt: apodData.title,\n        className: \"apod-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), apodData.media_type === \"video\" && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"APOD Video\",\n        src: apodData.url,\n        className: \"apod-video\",\n        frameBorder: \"0\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: apodData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: apodData.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: apodData.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(APOD, \"XOSL/ASVhRSdhucC+EYBnrtiPvk=\");\n_c = APOD;\nexport default APOD;\nvar _c;\n$RefreshReg$(_c, \"APOD\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","APOD","_s","apodData","setApodData","loading","setLoading","error","setError","fetchAPOD","response","fetch","ok","Error","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","media_type","src","url","alt","title","frameBorder","allowFullScreen","explanation","date","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js"],"sourcesContent":["// src/pages/APOD.js\n\nimport React, { useEffect, useState } from 'react';\nimport './APOD.css'; // Import the updated CSS file\n\nfunction APOD() {\n  const [apodData, setApodData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchAPOD = async () => {\n      try {\n        const response = await fetch('/api/apod');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setApodData(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAPOD();\n  }, []);\n\n  return (\n    <div className=\"apod-container\">\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : error ? (\n        <h2>Error fetching data: {error.message}</h2>\n      ) : (\n        <div className=\"apod-content\">\n          {apodData.media_type === \"image\" && (\n            <img src={apodData.url} alt={apodData.title} className=\"apod-image\" />\n          )}\n          {apodData.media_type === \"video\" && (\n            <iframe\n              title=\"APOD Video\"\n              src={apodData.url}\n              className=\"apod-video\"\n              frameBorder=\"0\"\n              allowFullScreen\n            />\n          )}\n          <div className=\"description\">\n            <h1>{apodData.title}</h1>\n            <p>{apodData.explanation}</p>\n            <div className=\"date\">{apodData.date}</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default APOD;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}