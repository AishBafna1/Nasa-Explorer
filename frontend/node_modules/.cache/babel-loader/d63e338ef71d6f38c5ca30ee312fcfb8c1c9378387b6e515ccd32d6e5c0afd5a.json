{"ast":null,"code":"import React,{useState}from'react';import Navbar from'../components/Navbar';// Ensure the path is correct\nimport'./NasaLibrary.css';// Ensure you have your CSS ready\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function NasaLibrary(){const[searchQuery,setSearchQuery]=useState('');const[libraryData,setLibraryData]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Function to fetch NASA library images\nconst fetchLibraryImages=async()=>{if(!searchQuery){setError('Please enter a search term.');return;}setLoading(true);setError(null);// Reset any previous errors\ntry{const response=await fetch(`/api/nasa-library?q=${searchQuery}`);const data=await response.json();console.log('NASA Library Data:',data);if(data.collection&&data.collection.items.length>0){setLibraryData(data.collection.items);}else{setLibraryData([]);// Clear previous results if no new results\nsetError('No results found.');// Set error if no results\n}}catch(error){console.error('Error fetching NASA library data:',error);setError('Failed to fetch NASA library data');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"nasa-library-container\",children:[/*#__PURE__*/_jsx(Navbar,{}),\" \",/*#__PURE__*/_jsx(\"h1\",{children:\"Nasa Image and Video Library\"}),\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search for images...\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value)// Update search query\n}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchLibraryImages,children:\"Search\"})]}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"spinner\",children:\"Loading...\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"library-grid\",children:libraryData.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"library-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.links[0].href// Get the image URL\n,alt:item.data[0].title,className:\"library-image\"}),/*#__PURE__*/_jsx(\"p\",{children:item.data[0].title}),/*#__PURE__*/_jsx(\"p\",{children:item.data[0].description||'No description available.'})]},item.data[0].nasa_id))})]});}export default NasaLibrary;","map":{"version":3,"names":["React","useState","Navbar","jsx","_jsx","jsxs","_jsxs","NasaLibrary","searchQuery","setSearchQuery","libraryData","setLibraryData","loading","setLoading","error","setError","fetchLibraryImages","response","fetch","data","json","console","log","collection","items","length","className","children","type","placeholder","value","onChange","e","target","onClick","map","item","src","links","href","alt","title","description","nasa_id"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NasaLibrary.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the path is correct\nimport './NasaLibrary.css'; // Ensure you have your CSS ready\n\nfunction NasaLibrary() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [libraryData, setLibraryData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch NASA library images\n  const fetchLibraryImages = async () => {\n    if (!searchQuery) {\n      setError('Please enter a search term.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null); // Reset any previous errors\n\n    try {\n      const response = await fetch(`/api/nasa-library?q=${searchQuery}`);\n      const data = await response.json();\n      console.log('NASA Library Data:', data);\n\n      if (data.collection && data.collection.items.length > 0) {\n        setLibraryData(data.collection.items);\n      } else {\n        setLibraryData([]); // Clear previous results if no new results\n        setError('No results found.'); // Set error if no results\n      }\n    } catch (error) {\n      console.error('Error fetching NASA library data:', error);\n      setError('Failed to fetch NASA library data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"nasa-library-container\">\n      <Navbar /> {/* Include the Navbar */}\n\n      <h1>Nasa Image and Video Library</h1> {/* Title positioned above the search bar */}\n\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for images...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)} // Update search query\n        />\n        <button onClick={fetchLibraryImages}>Search</button>\n      </div>\n\n      {loading && <div className=\"spinner\">Loading...</div>}\n      {error && <p className=\"error\">{error}</p>} {/* Display error message */}\n\n      <div className=\"library-grid\">\n        {libraryData.map((item) => (\n          <div key={item.data[0].nasa_id} className=\"library-item\">\n            <img \n              src={item.links[0].href} // Get the image URL\n              alt={item.data[0].title} \n              className=\"library-image\" \n            />\n            <p>{item.data[0].title}</p>\n            <p>{item.data[0].description || 'No description available.'}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default NasaLibrary;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}