{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/components/NEOChart.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the necessary components from Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction NEOChart({\n  neoData\n}) {\n  const chartData = {\n    labels: neoData.map(neo => neo.name),\n    // Extract names for labels\n    datasets: [{\n      label: 'Miss Distance (km)',\n      // Label for the dataset\n      data: neoData.map(neo => {\n        const closeApproachData = neo.close_approach_data || []; // Ensure we have an array\n        const distance = closeApproachData.length > 0 ? parseFloat(closeApproachData[0].miss_distance.kilometers) : 0; // Default to 0 if no data is available\n        console.log(`NEO: ${neo.name}, Distance: ${distance}`); // Debugging log\n        return distance;\n      }),\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      // Bar color\n      borderColor: 'rgba(0, 0, 0, 1)',\n      // Border color\n      borderWidth: 1 // Border width\n    }]\n  };\n  const options = {\n    responsive: true,\n    // Make the chart responsive\n    plugins: {\n      legend: {\n        position: 'top' // Position of the legend\n      },\n      title: {\n        display: true,\n        // Display the title\n        text: 'Near Earth Objects - Miss Distance',\n        color: 'black' // Title color\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n}\n_c = NEOChart;\nexport default NEOChart; // Export the component\nvar _c;\n$RefreshReg$(_c, \"NEOChart\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","NEOChart","neoData","chartData","labels","map","neo","name","datasets","label","data","closeApproachData","close_approach_data","distance","length","parseFloat","miss_distance","kilometers","console","log","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","title","display","text","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/components/NEOChart.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the necessary components from Chart.js\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction NEOChart({ neoData }) {\n  const chartData = {\n    labels: neoData.map(neo => neo.name), // Extract names for labels\n    datasets: [\n      {\n        label: 'Miss Distance (km)', // Label for the dataset\n        data: neoData.map(neo => {\n          const closeApproachData = neo.close_approach_data || []; // Ensure we have an array\n          const distance = closeApproachData.length > 0 \n            ? parseFloat(closeApproachData[0].miss_distance.kilometers) \n            : 0; // Default to 0 if no data is available\n          console.log(`NEO: ${neo.name}, Distance: ${distance}`); // Debugging log\n          return distance; \n        }),\n        backgroundColor: 'rgba(0, 0, 0, 0.5)', // Bar color\n        borderColor: 'rgba(0, 0, 0, 1)', // Border color\n        borderWidth: 1, // Border width\n      }\n    ]\n  };\n\n  const options = {\n    responsive: true, // Make the chart responsive\n    plugins: {\n      legend: {\n        position: 'top', // Position of the legend\n      },\n      title: {\n        display: true, // Display the title\n        text: 'Near Earth Objects - Miss Distance',\n        color: 'black', // Title color\n      },\n    },\n  };\n\n  return <Bar data={chartData} options={options} />;\n}\n\nexport default NEOChart; // Export the component\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;;AAE3G;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,SAASI,QAAQA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAC7B,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEF,OAAO,CAACG,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;IAAE;IACtCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,oBAAoB;MAAE;MAC7BC,IAAI,EAAER,OAAO,CAACG,GAAG,CAACC,GAAG,IAAI;QACvB,MAAMK,iBAAiB,GAAGL,GAAG,CAACM,mBAAmB,IAAI,EAAE,CAAC,CAAC;QACzD,MAAMC,QAAQ,GAAGF,iBAAiB,CAACG,MAAM,GAAG,CAAC,GACzCC,UAAU,CAACJ,iBAAiB,CAAC,CAAC,CAAC,CAACK,aAAa,CAACC,UAAU,CAAC,GACzD,CAAC,CAAC,CAAC;QACPC,OAAO,CAACC,GAAG,CAAC,QAAQb,GAAG,CAACC,IAAI,eAAeM,QAAQ,EAAE,CAAC,CAAC,CAAC;QACxD,OAAOA,QAAQ;MACjB,CAAC,CAAC;MACFO,eAAe,EAAE,oBAAoB;MAAE;MACvCC,WAAW,EAAE,kBAAkB;MAAE;MACjCC,WAAW,EAAE,CAAC,CAAE;IAClB,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAAE;IAClBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,KAAK,CAAE;MACnB,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QAAE;QACfC,IAAI,EAAE,oCAAoC;QAC1CC,KAAK,EAAE,OAAO,CAAE;MAClB;IACF;EACF,CAAC;EAED,oBAAOhC,OAAA,CAACV,GAAG;IAACqB,IAAI,EAAEP,SAAU;IAACoB,OAAO,EAAEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnD;AAACC,EAAA,GApCQnC,QAAQ;AAsCjB,eAAeA,QAAQ,CAAC,CAAC;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}