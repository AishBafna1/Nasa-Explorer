{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Import Navbar\nimport './APOD.css'; // Import APOD styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction APOD() {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(''); // State for selected date\n\n  // Function to fetch APOD data\n  const fetchAPOD = async date => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/apod?date=${date}`);\n      const data = await response.json();\n      setApodData(data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Effect to fetch APOD when the component mounts or when selectedDate changes\n  useEffect(() => {\n    if (selectedDate) {\n      fetchAPOD(selectedDate);\n    } else {\n      const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n      setSelectedDate(today); // Set the selected date to today\n      fetchAPOD(today); // Default to today's date\n    }\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apod-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apod-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: (apodData === null || apodData === void 0 ? void 0 : apodData.title) || 'Astronomy Picture of the Day'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value) // Update selected date\n        ,\n        style: {\n          margin: '20px 0',\n          padding: '10px',\n          fontSize: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-wrapper\",\n        children: apodData && apodData.media_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: apodData.url,\n          alt: apodData.title,\n          className: \"apod-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this) : apodData && /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"APOD Video\",\n          src: apodData.url,\n          className: \"apod-video\",\n          frameBorder: \"0\",\n          allow: \"autoplay; encrypted-media\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"date\",\n        children: [\"Date: \", (apodData === null || apodData === void 0 ? void 0 : apodData.date) || selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: apodData === null || apodData === void 0 ? void 0 : apodData.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(APOD, \"2tBvReFsHmA1YAKIcTllZxJmQBs=\");\n_c = APOD;\nexport default APOD;\nvar _c;\n$RefreshReg$(_c, \"APOD\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","jsxDEV","_jsxDEV","APOD","_s","apodData","setApodData","loading","setLoading","error","setError","selectedDate","setSelectedDate","fetchAPOD","date","response","fetch","data","json","today","Date","toISOString","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","title","type","value","onChange","e","target","style","margin","padding","fontSize","media_type","src","url","alt","frameBorder","allow","allowFullScreen","explanation","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Import Navbar\nimport './APOD.css'; // Import APOD styles\n\nfunction APOD() {\n  const [apodData, setApodData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(''); // State for selected date\n\n  // Function to fetch APOD data\n  const fetchAPOD = async (date) => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/apod?date=${date}`);\n      const data = await response.json();\n      setApodData(data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Effect to fetch APOD when the component mounts or when selectedDate changes\n  useEffect(() => {\n    if (selectedDate) {\n      fetchAPOD(selectedDate);\n    } else {\n      const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n      setSelectedDate(today); // Set the selected date to today\n      fetchAPOD(today); // Default to today's date\n    }\n  }, [selectedDate]);\n\n  return (\n    <div className=\"apod-container\">\n      <Navbar /> {/* Include the Navbar */}\n\n      {loading && <div className=\"spinner\">Loading...</div>}\n      {error && <p className=\"error\">Error fetching data: {error.message}</p>}\n\n      <div className=\"apod-content\">\n        <h1>{apodData?.title || 'Astronomy Picture of the Day'}</h1>\n\n        {/* Date selection */}\n        <input\n          type=\"date\"\n          value={selectedDate}\n          onChange={(e) => setSelectedDate(e.target.value)} // Update selected date\n          style={{ margin: '20px 0', padding: '10px', fontSize: '1rem' }}\n        />\n\n        {/* Conditional rendering based on media type */}\n        <div className=\"media-wrapper\">\n          {apodData && apodData.media_type === 'image' ? (\n            <img src={apodData.url} alt={apodData.title} className=\"apod-image\" />\n          ) : (\n            apodData && (\n              <iframe\n                title=\"APOD Video\"\n                src={apodData.url}\n                className=\"apod-video\"\n                frameBorder=\"0\"\n                allow=\"autoplay; encrypted-media\"\n                allowFullScreen\n              />\n            )\n          )}\n        </div>\n\n        {/* Display the selected date at the bottom */}\n        <p className=\"date\">Date: {apodData?.date || selectedDate}</p> {/* Show selected date or fetched date */}\n        <p className=\"description\">{apodData?.explanation}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default APOD;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}