{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NasaLibrary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './NasaLibrary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NasaLibrary() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [libraryData, setLibraryData] = useState([]);\n  const [error, setError] = useState(null);\n  const handleSearch = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/api/nasa-library?query=${searchTerm}`);\n      const data = await response.json();\n      setLibraryData(data.collection.items); // Update based on actual response structure\n      setError(null); // Clear any previous errors\n    } catch (error) {\n      setError('Failed to fetch data');\n      console.error('Error fetching NASA library data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nasa-library-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"library-title\",\n      children: \"NASA Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-bar\",\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-grid\",\n      children: libraryData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"library-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.links[0].href // Ensure the correct image URL based on your API response\n          ,\n          alt: item.data[0].title,\n          className: \"library-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.data[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), \" \"]\n      }, item.data[0].nasa_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(NasaLibrary, \"ztT58nTx76KJ4y5v3oXUpEniado=\");\n_c = NasaLibrary;\nexport default NasaLibrary;\nvar _c;\n$RefreshReg$(_c, \"NasaLibrary\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NasaLibrary","_s","searchTerm","setSearchTerm","libraryData","setLibraryData","error","setError","handleSearch","e","preventDefault","response","fetch","data","json","collection","items","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","map","item","src","links","href","alt","title","nasa_id","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NasaLibrary.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './NasaLibrary.css';\n\nfunction NasaLibrary() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [libraryData, setLibraryData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/api/nasa-library?query=${searchTerm}`);\n      const data = await response.json();\n      setLibraryData(data.collection.items); // Update based on actual response structure\n      setError(null); // Clear any previous errors\n    } catch (error) {\n      setError('Failed to fetch data');\n      console.error('Error fetching NASA library data:', error);\n    }\n  };\n\n  return (\n    <div className=\"nasa-library-container\">\n      <h1 className=\"library-title\">NASA Library</h1> {/* Title for NASA Library */}\n      \n      <form className=\"search-bar\" onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {error && <p className=\"error\">{error}</p>}\n\n      <div className=\"library-grid\">\n        {libraryData.map((item) => (\n          <div key={item.data[0].nasa_id} className=\"library-item\">\n            <img\n              src={item.links[0].href} // Ensure the correct image URL based on your API response\n              alt={item.data[0].title}\n              className=\"library-image\"\n            />\n            <p>{item.data[0].title}</p> {/* Display the title of the item */}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default NasaLibrary;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}