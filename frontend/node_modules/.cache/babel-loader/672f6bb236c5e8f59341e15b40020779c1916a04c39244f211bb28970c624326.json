{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport './NasaLibrary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NasaLibrary() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/api/nasa-library?q=${searchTerm}`);\n      const data = await response.json();\n\n      // Check for collection items\n      if (data.collection && data.collection.items) {\n        setImages(data.collection.items); // Store the images in state\n      } else {\n        setImages([]); // No results found\n      }\n    } catch (err) {\n      setError('Failed to fetch data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nasa-library-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NASA Image and Video Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter search term (e.g., 'moon')\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-grid\",\n      children: images.length > 0 ? images.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.links[0].href,\n          alt: item.data[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.data[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, item.data[0].nasa_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(NasaLibrary, \"5r0RjcP/ftrAA0eZQwzC/vNx9bI=\");\n_c = NasaLibrary;\nexport default NasaLibrary;\nvar _c;\n$RefreshReg$(_c, \"NasaLibrary\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","NasaLibrary","_s","searchTerm","setSearchTerm","images","setImages","error","setError","handleSearch","response","fetch","data","json","collection","items","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","item","src","links","href","alt","title","nasa_id","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport './NasaLibrary.css';\n\nfunction NasaLibrary() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/api/nasa-library?q=${searchTerm}`);\n      const data = await response.json();\n      \n      // Check for collection items\n      if (data.collection && data.collection.items) {\n        setImages(data.collection.items); // Store the images in state\n      } else {\n        setImages([]); // No results found\n      }\n    } catch (err) {\n      setError('Failed to fetch data');\n    }\n  };\n\n  return (\n    <div className=\"nasa-library-container\">\n      <Navbar />\n      <h1>NASA Image and Video Library</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter search term (e.g., 'moon')\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {error && <p>{error}</p>}\n      <div className=\"image-grid\">\n        {images.length > 0 ? (\n          images.map((item) => (\n            <div key={item.data[0].nasa_id}>\n              <img src={item.links[0].href} alt={item.data[0].title} />\n              <p>{item.data[0].title}</p>\n            </div>\n          ))\n        ) : (\n          <p>No results found.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default NasaLibrary;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}