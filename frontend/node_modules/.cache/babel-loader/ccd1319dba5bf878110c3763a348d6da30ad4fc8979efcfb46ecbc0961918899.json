{"ast":null,"code":"import React,{useEffect,useState}from'react';import Navbar from'../components/Navbar';import'./NeoWs.css';import NEOChart from'../components/NEOChart';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function NeoWs(){const[neoData,setNeoData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const fetchNeoData=async()=>{setLoading(true);try{const response=await fetch('/api/neo');if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();console.log('NEO Data:',data);// Directly setting the array to the state\nsetNeoData(data);}catch(error){console.error('Error fetching NEO data:',error);setError(error);}finally{setLoading(false);}};useEffect(()=>{fetchNeoData();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"neo-container\",children:[/*#__PURE__*/_jsx(Navbar,{}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"spinner\",children:\"Loading...\"}),error&&/*#__PURE__*/_jsxs(\"p\",{className:\"error\",children:[\"Error fetching data: \",error.message]}),/*#__PURE__*/_jsx(\"h1\",{children:\"Near Earth Objects\"}),neoData.length>0&&/*#__PURE__*/_jsx(NEOChart,{neoData:neoData}),neoData.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"neo-list\",children:neoData.map(neo=>/*#__PURE__*/_jsxs(\"div\",{className:\"neo-item\",children:[/*#__PURE__*/_jsx(\"h2\",{children:neo.name}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Estimated Diameter:\"}),\" \",neo.diameter.toFixed(2),\" m\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Close Approach Date:\"}),\" \",neo.closeApproachDate]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Miss Distance:\"}),\" \",neo.missDistance,\" km\"]})]},neo.id))})]});}export default NeoWs;","map":{"version":3,"names":["React","useEffect","useState","Navbar","NEOChart","jsx","_jsx","jsxs","_jsxs","NeoWs","neoData","setNeoData","loading","setLoading","error","setError","fetchNeoData","response","fetch","ok","Error","data","json","console","log","className","children","message","length","map","neo","name","diameter","toFixed","closeApproachDate","missDistance","id"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NeoWs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport './NeoWs.css';\nimport NEOChart from '../components/NEOChart';\n\nfunction NeoWs() {\n  const [neoData, setNeoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchNeoData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/neo');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('NEO Data:', data);\n\n      // Directly setting the array to the state\n      setNeoData(data);\n    } catch (error) {\n      console.error('Error fetching NEO data:', error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchNeoData();\n  }, []);\n\n  return (\n    <div className=\"neo-container\">\n      <Navbar />\n      {loading && <div className=\"spinner\">Loading...</div>}\n      {error && <p className=\"error\">Error fetching data: {error.message}</p>}\n      <h1>Near Earth Objects</h1>\n      {neoData.length > 0 && <NEOChart neoData={neoData} />}\n      {neoData.length > 0 && (\n        <div className=\"neo-list\">\n          {neoData.map((neo) => (\n            <div key={neo.id} className=\"neo-item\">\n              <h2>{neo.name}</h2>\n              <p><strong>Estimated Diameter:</strong> {neo.diameter.toFixed(2)} m</p>\n              <p><strong>Close Approach Date:</strong> {neo.closeApproachDate}</p>\n              <p><strong>Miss Distance:</strong> {neo.missDistance} km</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NeoWs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}