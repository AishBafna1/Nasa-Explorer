{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NasaLibrary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport './NasaLibrary.css'; // Ensure you have your CSS ready\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NasaLibrary() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [libraryData, setLibraryData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch NASA library images\n  const fetchLibraryImages = async () => {\n    if (!searchQuery) {\n      setError('Please enter a search term.');\n      return;\n    }\n    setLoading(true);\n    setError(null); // Reset any previous errors\n\n    try {\n      const response = await fetch(`/api/nasa-library?q=${searchQuery}`);\n      const data = await response.json();\n      console.log('NASA Library Data:', data);\n      if (data.collection && data.collection.items.length > 0) {\n        setLibraryData(data.collection.items);\n      } else {\n        setLibraryData([]); // Clear previous results if no new results\n      }\n    } catch (error) {\n      console.error('Error fetching NASA library data:', error);\n      setError('Failed to fetch NASA library data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nasa-library-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nasa-library-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NASA Image and Video Library\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for images (e.g., Moon, Earth, Mars)\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchLibraryImages,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-grid\",\n        children: libraryData.length > 0 ? libraryData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.links[0].href,\n            alt: item.data[0].title,\n            className: \"nasa-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.data[0].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, item.data[0].nasa_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)) :\n        // Show \"No results found\" only if there was a previous search\n        !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No results found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(NasaLibrary, \"1qR66Zftk9psoPrdppiL4B/JmBs=\");\n_c = NasaLibrary;\nexport default NasaLibrary;\nvar _c;\n$RefreshReg$(_c, \"NasaLibrary\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","NasaLibrary","_s","searchQuery","setSearchQuery","libraryData","setLibraryData","loading","setLoading","error","setError","fetchLibraryImages","response","fetch","data","json","console","log","collection","items","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","item","src","links","href","alt","title","nasa_id","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NasaLibrary.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport './NasaLibrary.css'; // Ensure you have your CSS ready\n\nfunction NasaLibrary() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [libraryData, setLibraryData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch NASA library images\n  const fetchLibraryImages = async () => {\n    if (!searchQuery) {\n      setError('Please enter a search term.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null); // Reset any previous errors\n\n    try {\n      const response = await fetch(`/api/nasa-library?q=${searchQuery}`);\n      const data = await response.json();\n      console.log('NASA Library Data:', data);\n\n      if (data.collection && data.collection.items.length > 0) {\n        setLibraryData(data.collection.items);\n      } else {\n        setLibraryData([]); // Clear previous results if no new results\n      }\n    } catch (error) {\n      console.error('Error fetching NASA library data:', error);\n      setError('Failed to fetch NASA library data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"nasa-library-container\">\n      <Navbar /> {/* Include the Navbar */}\n\n      <div className=\"nasa-library-content\">\n        <h1>NASA Image and Video Library</h1>\n\n        {/* Search bar */}\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Search for images (e.g., Moon, Earth, Mars)\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n          <button onClick={fetchLibraryImages}>Search</button>\n        </div>\n\n        {loading && <div className=\"spinner\">Loading...</div>}\n        {error && <p className=\"error\">{error}</p>}\n\n        {/* Display the images */}\n        <div className=\"image-grid\">\n          {libraryData.length > 0 ? (\n            libraryData.map((item) => (\n              <div key={item.data[0].nasa_id} className=\"image-item\">\n                <img src={item.links[0].href} alt={item.data[0].title} className=\"nasa-image\" />\n                <p>{item.data[0].title}</p>\n              </div>\n            ))\n          ) : (\n            // Show \"No results found\" only if there was a previous search\n            !loading && <p>No results found.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NasaLibrary;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}