{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js\",\n  _s = $RefreshSig$();\n// src/pages/APOD.js\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the Navbar is imported\nimport './APOD.css'; // Import specific CSS for APOD\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APOD = () => {\n  _s();\n  const [apodData, setApodData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAPOD = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/apod'); // Update with your backend API\n        const data = await response.json();\n        setApodData(data);\n      } catch (error) {\n        console.error('Error fetching APOD data:', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAPOD();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error fetching APOD data: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apod-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apod-content\",\n      children: [apodData.media_type === 'video' ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: apodData.url,\n        title: apodData.title,\n        frameBorder: \"0\",\n        allowFullScreen: true,\n        className: \"apod-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apodData.url,\n        alt: apodData.title,\n        className: \"apod-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"apod-description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: apodData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: apodData.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"apod-date\",\n          children: [\"Date: \", apodData.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(APOD, \"XOSL/ASVhRSdhucC+EYBnrtiPvk=\");\n_c = APOD;\nexport default APOD;\nvar _c;\n$RefreshReg$(_c, \"APOD\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","APOD","_s","apodData","setApodData","loading","setLoading","error","setError","fetchAPOD","response","fetch","data","json","console","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","media_type","src","url","title","frameBorder","allowFullScreen","alt","explanation","date","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/APOD.js"],"sourcesContent":["// src/pages/APOD.js\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the Navbar is imported\nimport './APOD.css'; // Import specific CSS for APOD\n\nconst APOD = () => {\n  const [apodData, setApodData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchAPOD = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/apod'); // Update with your backend API\n        const data = await response.json();\n        setApodData(data);\n      } catch (error) {\n        console.error('Error fetching APOD data:', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAPOD();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error fetching APOD data: {error.message}</div>;\n\n  return (\n    <div className=\"apod-container\">\n      <Navbar />\n      <div className=\"apod-content\">\n        {apodData.media_type === 'video' ? (\n          <iframe\n            src={apodData.url}\n            title={apodData.title}\n            frameBorder=\"0\"\n            allowFullScreen\n            className=\"apod-video\"\n          />\n        ) : (\n          <img src={apodData.url} alt={apodData.title} className=\"apod-image\" />\n        )}\n        <div className=\"apod-description\">\n          <h1>{apodData.title}</h1>\n          <p>{apodData.explanation}</p>\n          <p className=\"apod-date\">Date: {apodData.date}</p> {/* Display date */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default APOD;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}