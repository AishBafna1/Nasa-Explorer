{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NeoWs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the path is correct\nimport MyChart from '../components/MyChart'; // Import your chart component for visualization\nimport './NeoWs.css'; // Ensure you have your NEO styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NeoWs() {\n  _s();\n  const [neoData, setNeoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch Near Earth Objects data from the API\n  const fetchNeoData = async () => {\n    setLoading(true); // Set loading state before fetching\n    try {\n      const response = await fetch('/api/neo'); // Fetch data from your backend\n      const data = await response.json(); // Parse the response as JSON\n      console.log('NEO Data:', data); // Log the fetched data\n\n      if (Array.isArray(data)) {\n        setNeoData(data); // Set the state to the array of NEOs\n      } else {\n        console.error('Unexpected data structure:', data);\n        setNeoData([]); // Set to empty if unexpected structure\n      }\n    } catch (error) {\n      console.error('Error fetching NEO data:', error); // Log any errors\n      setError(error); // Set the error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Call the fetch function when the component mounts\n  useEffect(() => {\n    fetchNeoData(); // Call the function to fetch NEO data\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"neo-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Near Earth Objects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), neoData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"neo-list\",\n        children: neoData.map(neo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"neo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: neo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Estimated Diameter:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 20\n            }, this), \" \", neo.diameter.toFixed(2), \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Close Approach Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 20\n            }, this), \" \", neo.closeApproachDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Miss Distance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 20\n            }, this), \" \", neo.missDistance, \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, neo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MyChart, {\n        data: neoData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(NeoWs, \"mIDJ2D4KaONsoVT8ys47w9oMmts=\");\n_c = NeoWs;\nexport default NeoWs;\nvar _c;\n$RefreshReg$(_c, \"NeoWs\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","MyChart","jsxDEV","_jsxDEV","Fragment","_Fragment","NeoWs","_s","neoData","setNeoData","loading","setLoading","error","setError","fetchNeoData","response","fetch","data","json","console","log","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","map","neo","name","diameter","toFixed","closeApproachDate","missDistance","id","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/pages/NeoWs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar'; // Ensure the path is correct\nimport MyChart from '../components/MyChart';  // Import your chart component for visualization\nimport './NeoWs.css'; // Ensure you have your NEO styles\n\nfunction NeoWs() {\n  const [neoData, setNeoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch Near Earth Objects data from the API\n  const fetchNeoData = async () => {\n    setLoading(true); // Set loading state before fetching\n    try {\n      const response = await fetch('/api/neo'); // Fetch data from your backend\n      const data = await response.json(); // Parse the response as JSON\n      console.log('NEO Data:', data); // Log the fetched data\n\n      if (Array.isArray(data)) {\n        setNeoData(data); // Set the state to the array of NEOs\n      } else {\n        console.error('Unexpected data structure:', data);\n        setNeoData([]); // Set to empty if unexpected structure\n      }\n    } catch (error) {\n      console.error('Error fetching NEO data:', error); // Log any errors\n      setError(error); // Set the error state\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Call the fetch function when the component mounts\n  useEffect(() => {\n    fetchNeoData(); // Call the function to fetch NEO data\n  }, []);\n\n  return (\n    <div className=\"neo-container\">\n      <Navbar /> {/* Include the Navbar */}\n\n      {loading && <div className=\"spinner\">Loading...</div>}\n      {error && <p className=\"error\">Error fetching data: {error.message}</p>}\n\n      <h1>Near Earth Objects</h1>\n\n      {/* Check if there's data */}\n      {neoData.length > 0 ? (\n        <>\n          <div className=\"neo-list\">\n            {neoData.map((neo) => (\n              <div key={neo.id} className=\"neo-item\">\n                <h2>{neo.name}</h2>\n                <p><strong>Estimated Diameter:</strong> {neo.diameter.toFixed(2)} km</p>\n                <p><strong>Close Approach Date:</strong> {neo.closeApproachDate}</p>\n                <p><strong>Miss Distance:</strong> {neo.missDistance} km</p>\n              </div>\n            ))}\n          </div>\n\n          {/* Visualization Component for NEOs */}\n          <MyChart data={neoData} />\n        </>\n      ) : (\n        <p>No data available to display.</p>\n      )}\n    </div>\n  );\n}\n\nexport default NeoWs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}