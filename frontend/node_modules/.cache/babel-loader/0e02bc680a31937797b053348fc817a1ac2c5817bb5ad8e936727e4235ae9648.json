{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/components/NEOChart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart, registerables } from 'neochart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst MyChart = ({\n  data\n}) => {\n  _s();\n  const chartRef = React.useRef(null);\n  React.useEffect(() => {\n    const myChartRef = chartRef.current.getContext(\"2d\");\n\n    // Create the chart\n    new Chart(myChartRef, {\n      type: 'bar',\n      // Choose your chart type (e.g., 'bar', 'line', etc.)\n      data: {\n        labels: ['Label 1', 'Label 2', 'Label 3'],\n        // Your labels\n        datasets: [{\n          label: 'My Dataset',\n          data: data,\n          // Your data array\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\n          // Black with a 50% opacity for shading\n          borderColor: 'rgba(0, 0, 0, 1)',\n          // Solid black border\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true,\n            grid: {\n              color: 'rgba(255, 255, 255, 0.2)' // Light grid lines for contrast\n            }\n          },\n          x: {\n            grid: {\n              color: 'rgba(255, 255, 255, 0.2)' // Light grid lines for contrast\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            labels: {\n              color: 'white' // Color of legend text\n            }\n          },\n          tooltip: {\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n            // Tooltip background color\n            titleColor: 'white',\n            // Tooltip title color\n            bodyColor: 'white' // Tooltip body color\n          }\n        }\n      }\n    });\n    return () => {\n      // Clean up chart when component unmounts\n      myChartRef.destroy();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n_s(MyChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = MyChart;\nexport default NEOChart;\nvar _c;\n$RefreshReg$(_c, \"MyChart\");","map":{"version":3,"names":["React","Chart","registerables","jsxDEV","_jsxDEV","register","MyChart","data","_s","chartRef","useRef","useEffect","myChartRef","current","getContext","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","grid","color","x","plugins","legend","tooltip","titleColor","bodyColor","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","NEOChart","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/components/NEOChart.js"],"sourcesContent":["import React from 'react';\nimport { Chart, registerables } from 'neochart.js';\n\nChart.register(...registerables);\n\nconst MyChart = ({ data }) => {\n  const chartRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const myChartRef = chartRef.current.getContext(\"2d\");\n\n    // Create the chart\n    new Chart(myChartRef, {\n      type: 'bar', // Choose your chart type (e.g., 'bar', 'line', etc.)\n      data: {\n        labels: ['Label 1', 'Label 2', 'Label 3'], // Your labels\n        datasets: [\n          {\n            label: 'My Dataset',\n            data: data, // Your data array\n            backgroundColor: 'rgba(0, 0, 0, 0.5)', // Black with a 50% opacity for shading\n            borderColor: 'rgba(0, 0, 0, 1)', // Solid black border\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true,\n            grid: {\n              color: 'rgba(255, 255, 255, 0.2)', // Light grid lines for contrast\n            },\n          },\n          x: {\n            grid: {\n              color: 'rgba(255, 255, 255, 0.2)', // Light grid lines for contrast\n            },\n          },\n        },\n        plugins: {\n          legend: {\n            labels: {\n              color: 'white', // Color of legend text\n            },\n          },\n          tooltip: {\n            backgroundColor: 'rgba(0, 0, 0, 0.8)', // Tooltip background color\n            titleColor: 'white', // Tooltip title color\n            bodyColor: 'white', // Tooltip body color\n          },\n        },\n      },\n    });\n\n    return () => {\n      // Clean up chart when component unmounts\n      myChartRef.destroy();\n    };\n  }, [data]);\n\n  return <canvas ref={chartRef} />;\n};\n\nexport default NEOChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,aAAa,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnDH,KAAK,CAACI,QAAQ,CAAC,GAAGH,aAAa,CAAC;AAEhC,MAAMI,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGT,KAAK,CAACU,MAAM,CAAC,IAAI,CAAC;EAEnCV,KAAK,CAACW,SAAS,CAAC,MAAM;IACpB,MAAMC,UAAU,GAAGH,QAAQ,CAACI,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;;IAEpD;IACA,IAAIb,KAAK,CAACW,UAAU,EAAE;MACpBG,IAAI,EAAE,KAAK;MAAE;MACbR,IAAI,EAAE;QACJS,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAAE;QAC3CC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,YAAY;UACnBX,IAAI,EAAEA,IAAI;UAAE;UACZY,eAAe,EAAE,oBAAoB;UAAE;UACvCC,WAAW,EAAE,kBAAkB;UAAE;UACjCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE,IAAI;YACjBC,IAAI,EAAE;cACJC,KAAK,EAAE,0BAA0B,CAAE;YACrC;UACF,CAAC;UACDC,CAAC,EAAE;YACDF,IAAI,EAAE;cACJC,KAAK,EAAE,0BAA0B,CAAE;YACrC;UACF;QACF,CAAC;QACDE,OAAO,EAAE;UACPC,MAAM,EAAE;YACNd,MAAM,EAAE;cACNW,KAAK,EAAE,OAAO,CAAE;YAClB;UACF,CAAC;UACDI,OAAO,EAAE;YACPZ,eAAe,EAAE,oBAAoB;YAAE;YACvCa,UAAU,EAAE,OAAO;YAAE;YACrBC,SAAS,EAAE,OAAO,CAAE;UACtB;QACF;MACF;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACX;MACArB,UAAU,CAACsB,OAAO,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAAC3B,IAAI,CAAC,CAAC;EAEV,oBAAOH,OAAA;IAAQ+B,GAAG,EAAE1B;EAAS;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAAC/B,EAAA,CAzDIF,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AA2Db,eAAemC,QAAQ;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}