{"ast":null,"code":"var _jsxFileName = \"/Users/buffu/Desktop/nasa-explorer/frontend/src/components/MyChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyChart({\n  data\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n    const chartInstance = new Chart(ctx, {\n      type: 'bar',\n      // or 'line', 'pie', etc.\n      data: data,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true\n          }\n        }\n      }\n    });\n\n    // Cleanup the chart instance when the component unmounts\n    return () => {\n      chartInstance.destroy();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n_s(MyChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = MyChart;\nexport default MyChart;\nvar _c;\n$RefreshReg$(_c, \"MyChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","MyChart","data","_s","chartRef","ctx","current","getContext","chartInstance","type","options","responsive","plugins","legend","display","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/buffu/Desktop/nasa-explorer/frontend/src/components/MyChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nfunction MyChart({ data }) {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n    const chartInstance = new Chart(ctx, {\n      type: 'bar', // or 'line', 'pie', etc.\n      data: data,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n          },\n        },\n      },\n    });\n\n    // Cleanup the chart instance when the component unmounts\n    return () => {\n      chartInstance.destroy();\n    };\n  }, [data]);\n\n  return <canvas ref={chartRef} />;\n}\n\nexport default MyChart;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMS,GAAG,GAAGD,QAAQ,CAACE,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAC7C,MAAMC,aAAa,GAAG,IAAIV,KAAK,CAACO,GAAG,EAAE;MACnCI,IAAI,EAAE,KAAK;MAAE;MACbP,IAAI,EAAEA,IAAI;MACVQ,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,OAAO,EAAE;UACX;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXN,aAAa,CAACO,OAAO,CAAC,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACb,IAAI,CAAC,CAAC;EAEV,oBAAOF,OAAA;IAAQgB,GAAG,EAAEZ;EAAS;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC;AAACjB,EAAA,CAzBQF,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AA2BhB,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}